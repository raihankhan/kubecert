apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kubecert-system/kubecert-serving-cert
    controller-gen.kubebuilder.io/version: v0.16.1
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"cert-manager.io/inject-ca-from":"kubecert-system/kubecert-serving-cert","controller-gen.kubebuilder.io/version":"v0.16.1"},"name":"certificates.certs.k8c.io"},"spec":{"conversion":{"strategy":"Webhook","webhook":{"clientConfig":{"service":{"name":"kubecert-webhook-service","namespace":"kubecert-system","path":"/convert"}},"conversionReviewVersions":["v1"]}},"group":"certs.k8c.io","names":{"kind":"Certificate","listKind":"CertificateList","plural":"certificates","singular":"certificate"},"scope":"Namespaced","versions":[{"name":"v1","schema":{"openAPIV3Schema":{"description":"Certificate is the Schema for the certificates API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"CertificateSpec defines the desired state of Certificate.\nA valid Certificate requires at least one of a CommonName, LiteralSubject, DNSName, or URI to be valid.","properties":{"commonName":{"description":"Requested common name X509 certificate subject attribute.","type":"string"},"dnsNames":{"description":"Requested DNS subject alternative names.","items":{"type":"string"},"type":"array"},"duration":{"description":"Requested 'duration' (i.e. lifetime) of the Certificate.\nIf unset, this defaults to 90 days.\nMinimum accepted duration is 1 hour.\nValue must be in units \"ms\", \"s\", \"m\", \"h\", \"d\", \"w\", \"y\"","format":"int64","type":"integer","x-kubernetes-int-or-string":true},"emailAddresses":{"description":"Requested email subject alternative names.","items":{"type":"string"},"type":"array"},"ipAddresses":{"description":"Requested IP address subject alternative names.","items":{"type":"string"},"type":"array"},"privateKey":{"description":"Private key options. These include the key algorithm and size, the used\nencoding and the rotation policy.","properties":{"algorithm":{"description":"Algorithm is the private key algorithm of the corresponding private key\nfor this certificate.\n\nIf provided, allowed values are either `RSA`, `ECDSA` or `Ed25519`.\nIf `algorithm` is specified and `size` is not provided,\nkey size of 2048 will be used for `RSA` key algorithm and\nkey size of 256 will be used for `ECDSA` key algorithm.\nkey size is ignored when using the `Ed25519` key algorithm.","enum":["RSA","ECDSA","Ed25519"],"type":"string"},"encoding":{"description":"The private key cryptography standards (PKCS) encoding for this\ncertificate's private key to be encoded in.\n\nIf provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1\nand PKCS#8, respectively.\nDefaults to `PKCS1` if not specified.","enum":["PKCS1","PKCS8"],"type":"string"},"rotationPolicy":{"description":"RotationPolicy controls how private keys should be regenerated when a\nre-issuance is being processed.\n\nIf set to `Never`, a private key will only be generated if one does not\nalready exist in the target `spec.secretName`. If one does exists but it\ndoes not have the correct algorithm or size, a warning will be raised\nto await user intervention.\nIf set to `Always`, a private key matching the specified requirements\nwill be generated whenever a re-issuance occurs.\nDefault is `Never` for backward compatibility.","enum":["Never","Always"],"type":"string"},"size":{"description":"Size is the key bit size of the corresponding private key for this certificate.\n\nIf `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`,\nand will default to `2048` if not specified.\nIf `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`,\nand will default to `256` if not specified.\nIf `algorithm` is set to `Ed25519`, Size is ignored.\nNo other values are allowed.","type":"integer"}},"type":"object"},"secretRef":{"description":"Name of the Secret resource that will be automatically created and\nmanaged by this Certificate resource. It will be populated with a\nprivate key and certificate, signed by itself. The Secret\nresource lives in the same namespace as the Certificate resource.","properties":{"name":{"default":"","description":"Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"},"secretTemplate":{"description":"Defines annotations and labels to be copied to the Certificate's Secret.\nLabels and annotations on the Secret will be changed as they appear on the\nSecretTemplate when added or removed.","properties":{"annotations":{"additionalProperties":{"type":"string"},"description":"Annotations is a key value map to be copied to the target Kubernetes Secret.","type":"object"},"labels":{"additionalProperties":{"type":"string"},"description":"Labels is a key value map to be copied to the target Kubernetes Secret.","type":"object"}},"type":"object"},"subject":{"description":"Requested set of X509 certificate subject attributes.\nThe common name attribute is specified separately in the `commonName` field.\nCannot be set if the `literalSubject` field is set.","properties":{"countries":{"description":"Countries to be used on the Certificate.","items":{"type":"string"},"type":"array"},"localities":{"description":"Cities to be used on the Certificate.","items":{"type":"string"},"type":"array"},"organizationalUnits":{"description":"Organizational Units to be used on the Certificate.","items":{"type":"string"},"type":"array"},"organizations":{"description":"Organizations to be used on the Certificate.","items":{"type":"string"},"type":"array"},"postalCodes":{"description":"Postal codes to be used on the Certificate.","items":{"type":"string"},"type":"array"},"provinces":{"description":"State/Provinces to be used on the Certificate.","items":{"type":"string"},"type":"array"},"streetAddresses":{"description":"Street addresses to be used on the Certificate.","items":{"type":"string"},"type":"array"}},"type":"object"},"uris":{"description":"Requested URI subject alternative names.","items":{"type":"string"},"type":"array"},"usages":{"description":"Requested key usages and extended key usages.\nThese usages are used to set the `usages` field on the created X509 certificate.\nIf unset, defaults to `digital signature` and `key encipherment`.","items":{"description":"KeyUsage specifies valid usage contexts for keys.","enum":["digital signature","content commitment","key encipherment","key agreement","data encipherment","cert sign","crl sign","encipher only","decipher only","any","server auth","client auth","code signing","email protection","ipsec end system","ipsec tunnel","ipsec user","timestamping","ocsp signing","microsoft sgc","netscape sgc"],"type":"string"},"type":"array"}},"type":"object"},"status":{"description":"CertificateStatus defines the observed state of Certificate","properties":{"conditions":{"description":"List of status conditions to indicate the status of certificates.\nKnown condition types are `Ready` and `Issuing`.","items":{"description":"CertificateCondition contains condition information for an Certificate.","properties":{"lastTransitionTime":{"description":"LastTransitionTime is the timestamp corresponding to the last status\nchange of this condition.","format":"date-time","type":"string"},"message":{"description":"Message is a description of the details of the last\ntransition, complementing reason.","type":"string"},"observedGeneration":{"description":"If set, this represents the .metadata.generation that the condition was\nset based upon.\nFor instance, if .metadata.generation is currently 12, but the\n.status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the Certificate.","format":"int64","type":"integer"},"status":{"description":"Status of the condition, one of (`True`, `False`, `Unknown`).","type":"string"},"type":{"description":"Type of the condition, known values are (`Ready`, `Issuing`).","enum":["Ready","Issuing"],"type":"string"}},"required":["status","type"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["type"],"x-kubernetes-list-type":"map"},"notAfter":{"description":"The expiration time of the certificate stored in the secret named\nby this resource in `spec.secretName`.","format":"date-time","type":"string"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
  creationTimestamp: "2024-09-17T11:42:04Z"
  generation: 2
  name: certificates.certs.k8c.io
  resourceVersion: "210555"
  uid: 43ec52bd-2713-4cab-a2e4-51a8037e993a
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lSQVAySWIweG40cmdBU1ZySHRMWWdQWWd3RFFZSktvWklodmNOQVFFTEJRQXcKQURBZUZ3MHlOREE1TVRjeE1UUXlNRFJhRncweU5ERXlNVFl4TVRReU1EUmFNQUF3Z2dFaU1BMEdDU3FHU0liMwpEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUR2S3JUWjFXcTZLNS9DOGQzdnhTeXBBS1dmRnMrYmloc0w2dWd3ClJacER6bmNGcnJuRzJRSTA4RzhEWk5TdCswSXpSK1UyNmtrTHN4R2wxNGs2eTRLOUtoZGpsaHBweDlZOTFicysKS1dCbjFLNkFwVm5FTGp4Z1RLdWtpbTgxTldHSnVFUXdNV0hkaWRCeFpPQnJFTnU0VWQ5NUpCUzJ0dVBnOVcwNgpaVUg3RVhueXQzQ1FZc0Z4aVh1aWpTY0hQbVo5NlE3c1NHNEY0bHF6NVJNZllPdE4zVDV6Y1U0ZVFsQnlBRlp1Cng3REh2RW9jUGFtZVA4azEydlphZWJ1aVpRUnZKYUZQV2ljbUlHTlk3RzQvSG1kWFFvTTBaeGNQQ2pRLzN0S24KRU9ib1ZDek5WMU1ZQTdBckc2K3JScE5PM1lDMStoYzVRUDlCeGRsTVM2eFBockhYQWdNQkFBR2pnWmt3Z1pZdwpEZ1lEVlIwUEFRSC9CQVFEQWdXZ01Bd0dBMVVkRXdFQi93UUNNQUF3ZGdZRFZSMFJBUUgvQkd3d2FvSXNhM1ZpClpXTmxjblF0ZDJWaWFHOXZheTF6WlhKMmFXTmxMbXQxWW1WalpYSjBMWE41YzNSbGJTNXpkbU9DT210MVltVmoKWlhKMExYZGxZbWh2YjJzdGMyVnlkbWxqWlM1cmRXSmxZMlZ5ZEMxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdQpiRzlqWVd3d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLWnJudmRKNUV3b0hFYlBCNGlOc1NPSFlKQ21Tclo4CkFqZXJ1YTgxV1VKWDlEUjUvZjEzLzdEV2FwQllIVlY4UEl1SHFLR1ZVZmgwMU1xVUtQTGNSSW0ySW9xdlJjMU4KdUltTHJRVkdKR3Zyd3dOTllKWG9rOTVDRjBORVJ3d3RNbmFIenZrSHRBck1LbmY5WnhQUXl2YlJ5Tll3dE5aVgpVeS9Ud0w5dmxuWG1sV3EzdHAxT1I2VldFMDVqWllOV3prMDhXL3J4MmRqc1UzS0hyNjFwWHYzTm1DSy82YkhQCmthZ3RXVjU0TmRFWWNHb3VMNHgxQnBmWmVWTnVSSFVhOXFVSERkbWxSRHJpUll1aHhVdUZXREhGTUFzZXhoY3UKUk01VXFWVzYxOTZwUVQ3N0g1SVhyb25EQWZ5ZlE2LzdEWjEzeWJFZWdVMG5xR2NIK0s2ck5OZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        service:
          name: kubecert-webhook-service
          namespace: kubecert-system
          path: /convert
          port: 443
      conversionReviewVersions:
      - v1
  group: certs.k8c.io
  names:
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    singular: certificate
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Certificate is the Schema for the certificates API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              CertificateSpec defines the desired state of Certificate.
              A valid Certificate requires at least one of a CommonName, LiteralSubject, DNSName, or URI to be valid.
            properties:
              commonName:
                description: Requested common name X509 certificate subject attribute.
                type: string
              dnsNames:
                description: Requested DNS subject alternative names.
                items:
                  type: string
                type: array
              duration:
                description: |-
                  Requested 'duration' (i.e. lifetime) of the Certificate.
                  If unset, this defaults to 90 days.
                  Minimum accepted duration is 1 hour.
                  Value must be in units "ms", "s", "m", "h", "d", "w", "y"
                format: int64
                type: integer
                x-kubernetes-int-or-string: true
              emailAddresses:
                description: Requested email subject alternative names.
                items:
                  type: string
                type: array
              ipAddresses:
                description: Requested IP address subject alternative names.
                items:
                  type: string
                type: array
              privateKey:
                description: |-
                  Private key options. These include the key algorithm and size, the used
                  encoding and the rotation policy.
                properties:
                  algorithm:
                    description: |-
                      Algorithm is the private key algorithm of the corresponding private key
                      for this certificate.

                      If provided, allowed values are either `RSA`, `ECDSA` or `Ed25519`.
                      If `algorithm` is specified and `size` is not provided,
                      key size of 2048 will be used for `RSA` key algorithm and
                      key size of 256 will be used for `ECDSA` key algorithm.
                      key size is ignored when using the `Ed25519` key algorithm.
                    enum:
                    - RSA
                    - ECDSA
                    - Ed25519
                    type: string
                  encoding:
                    description: |-
                      The private key cryptography standards (PKCS) encoding for this
                      certificate's private key to be encoded in.

                      If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1
                      and PKCS#8, respectively.
                      Defaults to `PKCS1` if not specified.
                    enum:
                    - PKCS1
                    - PKCS8
                    type: string
                  rotationPolicy:
                    description: |-
                      RotationPolicy controls how private keys should be regenerated when a
                      re-issuance is being processed.

                      If set to `Never`, a private key will only be generated if one does not
                      already exist in the target `spec.secretName`. If one does exists but it
                      does not have the correct algorithm or size, a warning will be raised
                      to await user intervention.
                      If set to `Always`, a private key matching the specified requirements
                      will be generated whenever a re-issuance occurs.
                      Default is `Never` for backward compatibility.
                    enum:
                    - Never
                    - Always
                    type: string
                  size:
                    description: |-
                      Size is the key bit size of the corresponding private key for this certificate.

                      If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`,
                      and will default to `2048` if not specified.
                      If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`,
                      and will default to `256` if not specified.
                      If `algorithm` is set to `Ed25519`, Size is ignored.
                      No other values are allowed.
                    type: integer
                type: object
              secretRef:
                description: |-
                  Name of the Secret resource that will be automatically created and
                  managed by this Certificate resource. It will be populated with a
                  private key and certificate, signed by itself. The Secret
                  resource lives in the same namespace as the Certificate resource.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              secretTemplate:
                description: |-
                  Defines annotations and labels to be copied to the Certificate's Secret.
                  Labels and annotations on the Secret will be changed as they appear on the
                  SecretTemplate when added or removed.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations is a key value map to be copied to the
                      target Kubernetes Secret.
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels is a key value map to be copied to the target
                      Kubernetes Secret.
                    type: object
                type: object
              subject:
                description: |-
                  Requested set of X509 certificate subject attributes.
                  The common name attribute is specified separately in the `commonName` field.
                  Cannot be set if the `literalSubject` field is set.
                properties:
                  countries:
                    description: Countries to be used on the Certificate.
                    items:
                      type: string
                    type: array
                  localities:
                    description: Cities to be used on the Certificate.
                    items:
                      type: string
                    type: array
                  organizationalUnits:
                    description: Organizational Units to be used on the Certificate.
                    items:
                      type: string
                    type: array
                  organizations:
                    description: Organizations to be used on the Certificate.
                    items:
                      type: string
                    type: array
                  postalCodes:
                    description: Postal codes to be used on the Certificate.
                    items:
                      type: string
                    type: array
                  provinces:
                    description: State/Provinces to be used on the Certificate.
                    items:
                      type: string
                    type: array
                  streetAddresses:
                    description: Street addresses to be used on the Certificate.
                    items:
                      type: string
                    type: array
                type: object
              uris:
                description: Requested URI subject alternative names.
                items:
                  type: string
                type: array
              usages:
                description: |-
                  Requested key usages and extended key usages.
                  These usages are used to set the `usages` field on the created X509 certificate.
                  If unset, defaults to `digital signature` and `key encipherment`.
                items:
                  description: KeyUsage specifies valid usage contexts for keys.
                  enum:
                  - digital signature
                  - content commitment
                  - key encipherment
                  - key agreement
                  - data encipherment
                  - cert sign
                  - crl sign
                  - encipher only
                  - decipher only
                  - any
                  - server auth
                  - client auth
                  - code signing
                  - email protection
                  - ipsec end system
                  - ipsec tunnel
                  - ipsec user
                  - timestamping
                  - ocsp signing
                  - microsoft sgc
                  - netscape sgc
                  type: string
                type: array
            type: object
          status:
            description: CertificateStatus defines the observed state of Certificate
            properties:
              conditions:
                description: |-
                  List of status conditions to indicate the status of certificates.
                  Known condition types are `Ready` and `Issuing`.
                items:
                  description: CertificateCondition contains condition information
                    for an Certificate.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the timestamp corresponding to the last status
                        change of this condition.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        Message is a description of the details of the last
                        transition, complementing reason.
                      type: string
                    observedGeneration:
                      description: |-
                        If set, this represents the .metadata.generation that the condition was
                        set based upon.
                        For instance, if .metadata.generation is currently 12, but the
                        .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the Certificate.
                      format: int64
                      type: integer
                    status:
                      description: Status of the condition, one of (`True`, `False`,
                        `Unknown`).
                      type: string
                    type:
                      description: Type of the condition, known values are (`Ready`,
                        `Issuing`).
                      enum:
                      - Ready
                      - Issuing
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              notAfter:
                description: |-
                  The expiration time of the certificate stored in the secret named
                  by this resource in `spec.secretName`.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    singular: certificate
  conditions:
  - lastTransitionTime: "2024-09-17T11:42:04Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-09-17T11:42:04Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
